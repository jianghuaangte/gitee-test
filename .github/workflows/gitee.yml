name: Sync GitHub Releases to Gitee

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # 每日自动执行

env:
  REPO_LIST: "vnt-dev/vnt neovim/neovim"  # 要同步的仓库列表

jobs:
  sync-releases:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Generate timestamp
      id: timestamp
      run: echo "tag_name=release-$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

    - name: Download and process assets
      run: |
        mkdir -p artifacts
        for REPO in $REPO_LIST; do
          REPO_DIR="${REPO//\//_}"
          echo "Processing $REPO..."
          
          # 获取最新Release信息
          release_info=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s "https://api.github.com/repos/$REPO/releases/latest")
          assets=$(echo "$release_info" | jq -r '.assets[] | .browser_download_url')
          
          mkdir -p "temp/$REPO_DIR"
          cd "temp/$REPO_DIR"
          
          # 下载所有资源文件
          for asset_url in $assets; do
            filename=$(basename "$asset_url")
            echo "Downloading $filename..."
            curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -LOJ "$asset_url"
          done
          
          # 处理每个文件
          for file in *; do
            if [ -f "$file" ]; then
              # 添加仓库前缀防止文件名冲突
              new_file="${REPO_DIR}_${file}"
              mv "$file" "$new_file"
              
              filesize=$(stat -c %s "$new_file")
              if [ $filesize -gt 104857600 ]; then
                echo "Splitting $new_file (size: $(numfmt --to=iec $filesize))"
                split -b 100M "$new_file" "${new_file}.part."
                rm "$new_file"
                
                # 生成分块校验和
                for part in "${new_file}.part."*; do
                  sha256sum "$part" | tee -a checksums.txt
                  mv "$part" ../../artifacts/
                done
              else
                # 生成完整文件校验和
                sha256sum "$new_file" | tee -a checksums.txt
                mv "$new_file" ../../artifacts/
              fi
            fi
          done
          
          # 合并校验文件
          if [ -f checksums.txt ]; then
            cat checksums.txt >> ../../artifacts/checksums.txt
          fi
          cd ../..
        done

    - name: Create Gitee Release
      id: create_release
      uses: nicennnnnnnlee/action-gitee-release@v1.0.5
      with:
        gitee_owner: ${{ secrets.GITEE_OWNER }}
        gitee_repo: ${{ secrets.GITEE_REPO }}
        gitee_token: ${{ secrets.GITEE_TOKEN }}
        gitee_tag_name: ${{ steps.timestamp.outputs.tag_name }}
        gitee_release_name: "Synced Releases ($(date +%Y-%m-%d))"
        gitee_release_body: |-
          Automatically synced releases from GitHub.
          Contains assets from: ${{ env.REPO_LIST }}
        gitee_target_commitish: master

    - name: Upload artifacts
      uses: nicennnnnnnlee/action-gitee-release@v1.0.5
      with:
        gitee_owner: ${{ secrets.GITEE_OWNER }}
        gitee_repo: ${{ secrets.GITEE_REPO }}
        gitee_token: ${{ secrets.GITEE_TOKEN }}
        gitee_release_id: ${{ steps.create_release.outputs.release-id }}
        gitee_upload_retry_times: 3
        gitee_files: |
          artifacts/*
